digraph {
graph [ordering="out"];
node0[label="ProgramNode "];
node1[label="FunctionDefinitionNode (dynamic) main "];
node2[label="VariableDefinitionNode (int)i@0"];
node1 -> node2;
node3[label="VariableDefinitionNode (int)b@0"];
node4[label="LiteralNode literal: 4"];
node3 -> node4;
node1 -> node3;
node5[label="VariableDefinitionNode (String)xixi@0"];
node1 -> node5;
node6[label="VariableDefinitionNode (String)s@0"];
node7[label="LiteralNode literal: Ola"];
node6 -> node7;
node1 -> node6;
node8[label="FunctionCallNode print"];
node9[label="VariableNode s@0"];
node8 -> node9;
node1 -> node8;
node10[label="FunctionCallNode print"];
node11[label="VariableNode b@0"];
node10 -> node11;
node1 -> node10;
node12[label="AssignNode"];
node13[label="VariableNode i@0"];
node12 -> node13;
node14[label="OperationNode operation: Addition"];
node15[label="LiteralNode literal: 2"];
node14 -> node15;
node16[label="OperationNode operation: Multiplication"];
node17[label="LiteralNode literal: 5"];
node16 -> node17;
node18[label="OperationNode operation: Multiplication"];
node19[label="LiteralNode literal: 3"];
node18 -> node19;
node20[label="LiteralNode literal: 4"];
node18 -> node20;
node16 -> node18;
node14 -> node16;
node12 -> node14;
node1 -> node12;
node0 -> node1;
}
